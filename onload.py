#!/usr/bin/env python3
"""
Generate a minimal config.js containing only the list of .html filenames in posts/.
Does NOT parse any content. Only lists files.

Used as a pre-commit hook to auto-update the knowledge base index.
"""

import os
from pathlib import Path

POSTS_DIR = "posts"
OUTPUT_FILE = "js/config.js"


def generate_config():
    posts_path = Path(POSTS_DIR)
    if not posts_path.exists() or not posts_path.is_dir():
        print(f"[ERROR] Posts directory '{POSTS_DIR}' does not exist.")
        return False

    # 获取所有 .html 文件，按名称排序保证一致性
    html_files = sorted(
        [
            f.name
            for f in posts_path.iterdir()
            if f.is_file() and f.suffix.lower() == ".html"
        ]
    )

    if not html_files:
        print(f"[INFO] No .html files found in {POSTS_DIR}.")
        file_list_str = ""
    else:
        # 格式化为 JavaScript 数组字符串，每行一个
        file_list_str = ",\n".join(f'    "{fname}"' for fname in html_files)

    # 生成 config.js 内容
    config_content = f"""// This file is auto-generated by generate-config.py. Do not edit manually.

const SITE_CONFIG = {{
  title: "Sumitpo",
  subtitle: "Programmer",
  description: "A knowledge base inspired by okmij.org/ftp/",
  githubUrl: "https://github.com/sumitpo/sumitpo.github.io",
  copyrightYear: "2025",
  postsDir: "posts/",
  postFiles: [
{file_list_str}
  ]
}};
"""

    with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
        f.write(config_content)

    print(f"[SUCCESS] Generated {OUTPUT_FILE} with {len(html_files)} article(s).")
    return True


if __name__ == "__main__":
    success = generate_config()
    if not success:
        exit(1)
